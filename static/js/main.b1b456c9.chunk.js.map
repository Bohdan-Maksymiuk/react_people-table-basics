{"version":3,"sources":["api/api.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","App.tsx","index.tsx"],"names":["getPeople","a","fetch","people","json","PersonRow","person","name","sex","born","died","motherName","fatherName","className","PeopleTable","useState","setPeople","useEffect","peopleFromServer","preparedPeople","map","mother","find","father","length","App","to","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"2SAEaA,EAAS,uCAAG,4BAAAC,EAAA,sEACFC,MAHN,qEAEQ,cACjBC,EADiB,yBAGhBA,EAAOC,QAHS,2CAAH,qD,qBCMTC,EAA6B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzCC,EAMED,EANFC,KACAC,EAKEF,EALFE,IACAC,EAIEH,EAJFG,KACAC,EAGEJ,EAHFI,KACAC,EAEEL,EAFFK,WACAC,EACEN,EADFM,WAGF,OACE,qBAAIC,UAAU,SAAd,UACE,6BAAKN,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,QCnBEE,EAAwB,WACnC,MAA4BC,mBAAmB,IAA/C,mBAAOZ,EAAP,KAAea,EAAf,KAiBA,OAfAC,qBAAU,YACP,+BAAAhB,EAAA,oCAAAA,EAAA,sEACgCD,IADhC,OACOkB,EADP,OAEOC,EAAiBD,EAAiBE,KAAI,SAAAd,GAAM,kCAC7CA,GAD6C,IAEhDe,OAAQH,EACLI,MAAK,SAAAD,GAAM,OAAIA,EAAOd,OAASD,EAAOK,eAAe,KACxDY,OAAQL,EACLI,MAAK,SAAAC,GAAM,OAAIA,EAAOhB,OAASD,EAAOM,eAAe,UAG1DI,EAAUG,GAVX,oGAYA,IAEEhB,EAAOqB,OAOV,wBAAOX,UAAU,uCAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,aAAd,kBACA,oBAAIA,UAAU,aAAd,iBACA,oBAAIA,UAAU,aAAd,kBACA,oBAAIA,UAAU,aAAd,kBACA,oBAAIA,UAAU,aAAd,oBACA,oBAAIA,UAAU,aAAd,yBAGJ,gCACGV,EAAOiB,KAAI,SAAAd,GAAM,OAChB,cAAC,EAAD,CAAWA,OAAQA,YAlBvB,wDCsCSmB,EArDC,kBACd,sBAAKZ,UAAU,MAAf,UACE,iCACE,qBAAKA,UAAU,mBAAf,SACE,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,YAAd,SACE,cAAC,IAAD,CAAMa,GAAG,IAAT,oBAGF,oBAAIb,UAAU,YAAd,SACE,cAAC,IAAD,CAAMa,GAAG,UAAT,6BAMR,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAK,IACLC,QACE,oBAAIf,UAAU,+BAAd,yBAMJ,cAAC,IAAD,CACEc,KAAK,UACLC,QACE,qCACE,oBAAIf,UAAU,+BAAd,0BACA,cAAC,EAAD,SAKN,cAAC,IAAD,CACEc,KAAK,QACLC,QAAS,cAAC,IAAD,CAAUF,GAAG,IAAIG,SAAO,MAGnC,cAAC,IAAD,CACEF,KAAK,IACLC,QACE,oBAAIf,UAAU,+BAAd,SACE,2DCnDZiB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b1b456c9.chunk.js","sourcesContent":["const BASE_API = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<PersonFromServer[]> => {\n  const people = await fetch(BASE_API);\n\n  return people.json();\n};\n","import React from 'react';\n\nimport './PersonRow.scss';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  return (\n    <tr className=\"Person\">\n      <td>{name}</td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{motherName}</td>\n      <td>{fatherName}</td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api/api';\n\nimport './PeopleTable.scss';\nimport { PersonRow } from '../PersonRow';\n\nexport const PeopleTable: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    (async function getPeopleFromServer() {\n      const peopleFromServer = await getPeople();\n      const preparedPeople = peopleFromServer.map(person => ({\n        ...person,\n        mother: peopleFromServer\n          .find(mother => mother.name === person.motherName) || null,\n        father: peopleFromServer\n          .find(father => father.name === person.fatherName) || null,\n      }));\n\n      setPeople(preparedPeople);\n    }());\n  }, []);\n\n  if (!people.length) {\n    return (\n      <h3>People are loading...</h3>\n    );\n  }\n\n  return (\n    <table className=\"PeopleTable table table is-hoverable\">\n      <thead>\n        <tr>\n          <th className=\"title is-4\">name</th>\n          <th className=\"title is-4\">sex</th>\n          <th className=\"title is-4\">born</th>\n          <th className=\"title is-4\">died</th>\n          <th className=\"title is-4\">mother</th>\n          <th className=\"title is-4\">father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <PersonRow person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\nimport {\n  Routes,\n  Route,\n  Link,\n  Navigate,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PeopleTable } from './components/PeopleTable';\n\nconst App: FC = () => (\n  <div className=\"App\">\n    <header>\n      <nav className=\"App__nav nav box\">\n        <ul className=\"nav__list\">\n          <li className=\"nav__item\">\n            <Link to=\"/\">Home</Link>\n          </li>\n\n          <li className=\"nav__item\">\n            <Link to=\"/people\">People</Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n\n    <Routes>\n      <Route\n        path=\"/\"\n        element={(\n          <h2 className=\"title is-2 has-text-centered\">\n            Home page\n          </h2>\n        )}\n      />\n\n      <Route\n        path=\"/people\"\n        element={(\n          <>\n            <h2 className=\"title is-2 has-text-centered\">People table</h2>\n            <PeopleTable />\n          </>\n        )}\n      />\n\n      <Route\n        path=\"/home\"\n        element={<Navigate to=\"/\" replace />}\n      />\n\n      <Route\n        path=\"*\"\n        element={(\n          <h2 className=\"title is-2 has-text-centered\">\n            <h2>Page not found</h2>\n          </h2>\n        )}\n      />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}